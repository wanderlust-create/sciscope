name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - '**' # Trigger on all branches
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          POSTGRES_HOST_AUTH_METHOD: md5
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..20}; do
            nc -z localhost 5432 && echo "Postgres is ready" && exit 0
            sleep 1
          done
          echo "Postgres failed to start" && exit 1

      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "TEST_DB_NAME=${{ secrets.TEST_DB_NAME }}" >> .env
          echo "NEWS_API_KEY=${{ secrets.NEWS_API_KEY }}" >> .env
          echo "DATABASE_URL=postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.TEST_DB_NAME }}?sslmode=disable" >> .env

      - name: Run migrations
        run: |
          npx knex migrate:latest --env test --knexfile ./src/config/knexfile.js

      - name: Run tests
        run: npm test
