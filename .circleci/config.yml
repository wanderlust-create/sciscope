version: 2.1

orbs:
  node: circleci/node@4.7.0
  postgres: circleci/postgres@4.1.0


jobs:
  test-node:
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - postgres/start-and-wait:
          docker:
            - image: circleci/postgres:12.3
              environment:
                POSTGRES_USER: $POSTGRES_USER
                POSTGRES_PASSWORD: $POSTGRES_PASSWORD
                POSTGRES_DB: $POSTGRES_DB
                DB_HOST: 127.0.0.1
                DB_PORT: 5432
      - run:
          name: Run Database Migrations
          command: npx knex migrate:latest --knexfile ./src/config/knexfile.js
      - run:
          command: npm install jest-junit
      - run:
          name: Run Tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - store_test_results:
          path: ./test-results/
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  build-node:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: "#e.g. ./deploy.sh"

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
