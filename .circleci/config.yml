version: 2.1

orbs:
  node: circleci/node@4.7.0

jobs:
  test-node:
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
      DB_HOST: db
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $TEST_DB_NAME
    docker:
      - image: circleci/node:16
      - image: postgres:12.3
        name: db
        environment:
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASSWORD
          POSTGRES_DB: $TEST_DB_NAME
    steps:
      - checkout

      - run:
          name: Create .env file
          command: |
            echo "DB_USER=${DB_USER}" >> .env
            echo "DB_PORT=${DB_PORT}" >> .env
            echo "DB_PASSWORD=${DB_PASSWORD}" >> .env
            echo "TEST_DB_NAME=${TEST_DB_NAME}" >> .env

      - node/install-packages:
          pkg-manager: npm

      - run:
          name: Wait for PostgreSQL to be ready
          command: |
            for i in {1..30}; do
              nc -z db 5432 && echo "Postgres is ready" && exit 0
              echo "Waiting for Postgres..."
              sleep 1
            done
            echo "Postgres failed to start" && exit 1

      - run:
          name: Debug DB env
          command: |
            echo "DB_USER=$DB_USER"
            echo "DB_PASSWORD=$DB_PASSWORD"
            echo "TEST_DB_NAME=$TEST_DB_NAME"
            echo "DB_HOST=$DB_HOST"

      - run:
          name: psql check
          command: |
            psql -h db -U "$DB_USER" -c 'SELECT version();' "$TEST_DB_NAME"

      - run:
          name: Debug Environment Variables
          command: env | grep POSTGRES || true

      - run:
          name: Run Database Migrations
          command: npx knex migrate:latest --env test --knexfile ./src/config/knexfile.js

      - run:
          command: npm install jest-junit

      - run:
          name: Run Tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit

      - store_test_results:
          path: ./test-results/

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  build-node:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: deploy
          command: "# e.g. ./deploy.sh"

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
