version: 2.1

orbs:
  node: circleci/node@4.7.0

jobs:
  test-node:
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
      DB_HOST: db
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $TEST_DB_NAME
    docker:
      - image: cimg/node:16.17
      - image: cimg/postgres:15.1
        name: db
        environment:
          POSTGRES_DB: $TEST_DB_NAME
          POSTGRES_HOST_AUTH_METHOD: md5
    steps:
      - checkout

      - run:
          name: Create test-results directory
          command: mkdir -p ./test-results/

      - run:
          name: Wait for PostgreSQL to be ready
          command: |
            for i in {1..30}; do
              nc -z db 5432 && echo "Postgres is ready" && exit 0
              echo "Waiting for Postgres..."
              sleep 1
            done
            echo "Postgres failed to start" && exit 1

      - run:
          name: Force Create PostgreSQL User
          command: |
            psql -h db -U postgres -d postgres -c "CREATE ROLE postgres WITH LOGIN SUPERUSER PASSWORD '$DB_PASSWORD';" || true

      - run:
          name: Verify Postgres Users
          command: |
            psql -h db -U postgres -d postgres -c '\du'

      - run:
          name: Run Database Migrations
          command: npx knex migrate:latest --env test --knexfile ./src/config/knexfile.js

      - run:
          name: Run Tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit

      - store_test_results:
          path: ./test-results/

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  build-node:
    docker:
      - image: circleci/node:16
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - store_artifacts:
          path: ./build
          destination: node-build
      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: deploy
          command: echo "Deploying application..."

workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
